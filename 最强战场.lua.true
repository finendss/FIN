local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/finendss/FIN-Ui/refs/heads/main/Âæ∑‰∏é‰∏≠Â±±-Ui"))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

WindUI:Popup({
    Title = "Âæ∑‰∏é‰∏≠Â±±",
    Icon = "sparkles",
    Content = "Â∞äÊï¨ÁöÑÔºö" .. game.Players.LocalPlayer.Name,
    Buttons = {
        {
            Title = "ÂêØÂä®",
            Icon = "arrow-right",
            Variant = "Primary",
            Callback = function()
                print("ÂêØÂä®")
            end
        }
    }
})

local Window = WindUI:CreateWindow({
    Title = "Âæ∑‰∏é‰∏≠Â±±/ÊúÄÂº∫ÊàòÂú∫",
    Icon = "sparkles",
    Author = "Âæ∑‰∏é‰∏≠Â±±-Hub",
    Folder = "DefenseSystem",
    Size = UDim2.fromOffset(400, 400),
    Theme = "Dark"
})

local TimeTag = Window:Tag({
    Title = "00:00",
    Color = Color3.fromHex("#30ff6a")
})

local hue = 0
task.spawn(function()
    while true do
        local now = os.date("*t")
        local hours = string.format("%02d", now.hour)
        local minutes = string.format("%02d", now.min)
        
        hue = (hue + 0.01) % 1
        local color = Color3.fromHSV(hue, 1, 1)
        
        TimeTag:SetTitle(hours .. ":" .. minutes)

        task.wait(0.06)
    end
end)

task.wait(0.3)

Window:EditOpenButton({
    Title = "Âæ∑‰∏é‰∏≠Â±±",
    Icon = "monitor",
    CornerRadius = UDim.new(0,16),
    StrokeThickness = 2,
    Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromHex("FF0000")),
        ColorSequenceKeypoint.new(0.66, Color3.fromHex("0000FF")),
        ColorSequenceKeypoint.new(0.83, Color3.fromHex("4B0082")),
        ColorSequenceKeypoint.new(1, Color3.fromHex("9400D3"))
    }),
    Draggable = true,
})

task.wait(0.2)

local MainTab = Window:Tab({
    Title = "‰∏ªÈ°µ",
    Icon = "zap",
    Locked = false,
})

MainTab:Section({Title = "ÂÖçË¥£Â£∞Êòé", TextXAlignment = "Left", TextSize = 17})

MainTab:Paragraph({
    Title = "Ë¢´Â∞ÅÊúçÂä°Âô®‰∏éÂæ∑‰∏é‰∏≠Â±±Êó†ÂÖ≥",
    Desc = "Ë¢´Â∞ÅÂè∑‰∏éÂæ∑‰∏é‰∏≠Â±±Êó†ÂÖ≥",
})

local Tab = Window:Tab({
    Title = "‰∏ªË¶Å",
    Icon = "drama",
    Locked = false,
})

Tab:Toggle({
    Title = "Êó†ÊôïÂÄº",
    Value = false,
    Callback = function(state)
        _G.antifreeze = state
        if state then
            task.spawn(function()
                while _G.antifreeze do
                    local char = LocalPlayer.Character
                    if char and char:FindFirstChild("Freeze") then char.Freeze:Destroy() end
                    task.wait()
                end
            end)
        end
    end
})

local Tab2 = Window:Tab({
    Title = "Ëá™Âä®Âåñ",
    Icon = "drama",
    Locked = false,
})

local autoTpToPlayer = false
local tpLoop = nil

local function getClosestPlayer()
    local me = Players.LocalPlayer
    local myChar = me.Character
    if not myChar then return nil end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return nil end
    
    local closest = nil
    local closestDist = math.huge
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= me then
            local char = player.Character
            if char then
                local root = char:FindFirstChild("HumanoidRootPart")
                if root then
                    local dist = (myRoot.Position - root.Position).Magnitude
                    if dist < closestDist then
                        closestDist = dist
                        closest = player
                    end
                end
            end
        end
    end
    
    return closest, closestDist
end

local function teleportToPlayerBack()
    if not autoTpToPlayer then return end
    
    local myChar = Players.LocalPlayer.Character
    if not myChar then return end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return end
    
    local targetPlayer, distance = getClosestPlayer()
    if not targetPlayer then return end
    
    local targetChar = targetPlayer.Character
    if not targetChar then return end
    
    local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
    if not targetRoot then return end
    
    local targetCFrame = targetRoot.CFrame
    local behindOffset = targetCFrame.LookVector * -2
    local targetPosition = targetRoot.Position + behindOffset
    
    myRoot.CFrame = CFrame.new(targetPosition)
end

local function startAutoTeleport()
    if tpLoop then
        tpLoop:Disconnect()
    end
    
    tpLoop = RunService.Heartbeat:Connect(function()
        if autoTpToPlayer then
            teleportToPlayerBack()
        end
    end)
end

local function stopAutoTeleport()
    if tpLoop then
        tpLoop:Disconnect()
        tpLoop = nil
    end
end

Tab2:Toggle({
    Title = "Ëá™Âä®ÈîÅÊïå",
    Default = false,
    Callback = function(state)
        autoTpToPlayer = state
        if state then
            startAutoTeleport()
            WindUI:Notify({
                Title = "Ëá™Âä®ÈîÅÊïåÂ∑≤ÂºÄÂêØ",
                Content = "ÊâìÊ≠ªÂà´‰∫∫üëÖ",
                Duration = 3
            })
        else
            stopAutoTeleport()
            WindUI:Notify({
                Title = "ÈîÅÊïåÂ∑≤ÂÖ≥Èó≠",
                Content = "‰ºëÊÅØ‰ºö",
                Duration = 3
            })
        end
    end
})

Players.LocalPlayer.CharacterAdded:Connect(function(char)
    task.wait(2)
    if autoTpToPlayer then
        startAutoTeleport()
    end
end)

local defenseOn = false
local faceOn = false
local attackOn = false
local defenseDistance = 30
local faceDistance = 5000
local attackDistance = 10
local animId = "10470389827"
local animTrack = nil
local defenseLoop = nil
local faceLoop = nil
local attackLoop = nil

local function setupAnim()
    local char = Players.LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") then
        local humanoid = char:FindFirstChild("Humanoid")
        local newAnim = Instance.new("Animation")
        newAnim.AnimationId = "rbxassetid://" .. animId
        animTrack = humanoid:LoadAnimation(newAnim)
        return true
    end
    return false
end

local function startAnim()
    if animTrack and not animTrack.IsPlaying then
        animTrack:Play()
    end
end

local function stopAnim()
    if animTrack and animTrack.IsPlaying then
        animTrack:Stop()
    end
end

local function playersInAttackRange()
    local me = Players.LocalPlayer
    local myChar = me.Character
    if not myChar then return false end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return false end
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= me then
            local char = player.Character
            if char then
                local root = char:FindFirstChild("HumanoidRootPart")
                if root then
                    local dist = (myRoot.Position - root.Position).Magnitude
                    if dist <= attackDistance then
                        return true
                    end
                end
            end
        end
    end
    
    return false
end

local function performAttack()
    local args = {
        {
            Goal = "LeftClick",
            Mobile = true
        }
    }
    local char = Players.LocalPlayer.Character
    if char and char:FindFirstChild("Communicate") then
        char.Communicate:FireServer(unpack(args))
    end
end

local function playersClose()
    local me = Players.LocalPlayer
    local myChar = me.Character
    if not myChar then return false end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return false end
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= me then
            local char = player.Character
            if char then
                local root = char:FindFirstChild("HumanoidRootPart")
                if root then
                    local dist = (myRoot.Position - root.Position).Magnitude
                    if dist <= defenseDistance then
                        return true
                    end
                end
            end
        end
    end
    
    return false
end

local function getClosestPlayerForFace()
    local me = Players.LocalPlayer
    local myChar = me.Character
    if not myChar then return nil end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return nil end
    
    local closest = nil
    local closestDist = 9999
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= me then
            local char = player.Character
            if char then
                local root = char:FindFirstChild("HumanoidRootPart")
                if root then
                    local dist = (myRoot.Position - root.Position).Magnitude
                    if dist < closestDist and dist <= faceDistance then
                        closestDist = dist
                        closest = player
                    end
                end
            end
        end
    end
    
    return closest
end

local function turnToPlayer()
    if not faceOn then return end
    
    local myChar = Players.LocalPlayer.Character
    if not myChar then return end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return end
    
    local targetPlayer = getClosestPlayerForFace()
    if not targetPlayer then return end
    
    local targetChar = targetPlayer.Character
    if not targetChar then return end
    
    local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
    if not targetRoot then return end
    
    local dir = (targetRoot.Position - myRoot.Position).Unit
    local lookDir = Vector3.new(dir.X, 0, dir.Z)
    
    if lookDir.Magnitude > 0 then
        myRoot.CFrame = CFrame.new(myRoot.Position, myRoot.Position + lookDir)
    end
end

local function beginAttackSystem()
    if attackLoop then
        attackLoop:Disconnect()
    end
    
    attackLoop = RunService.Heartbeat:Connect(function()
        if attackOn then
            local inRange = playersInAttackRange()
            if inRange then
                performAttack()
            end
        end
    end)
end

local function endAttackSystem()
    if attackLoop then
        attackLoop:Disconnect()
        attackLoop = nil
    end
end

local function beginFaceSystem()
    if faceLoop then
        faceLoop:Disconnect()
    end
    
    faceLoop = RunService.Heartbeat:Connect(function()
        if faceOn then
            turnToPlayer()
        end
    end)
end

local function endFaceSystem()
    if faceLoop then
        faceLoop:Disconnect()
        faceLoop = nil
    end
end

local function beginDefenseSystem()
    if defenseLoop then
        defenseLoop:Disconnect()
    end
    
    if not setupAnim() then
        return false
    end
    
    defenseLoop = RunService.Heartbeat:Connect(function()
        if defenseOn and animTrack then
            local nearby = playersClose()
            if nearby then
                startAnim()
            else
                stopAnim()
            end
        end
    end)
    return true
end

local function endDefenseSystem()
    if defenseLoop then
        defenseLoop:Disconnect()
        defenseLoop = nil
    end
    stopAnim()
end

Players.LocalPlayer.CharacterAdded:Connect(function(char)
    task.wait(2)
    if defenseOn then
        setupAnim()
    end
    if attackOn then
        beginAttackSystem()
    end
end)

Tab2:Toggle({
    Title = "Èù†ËøëËá™Âä®ÂÅáÈò≤Âæ°",
    Default = false,
    Callback = function(state)
        defenseOn = state
        if state then
            beginDefenseSystem()
        else
            endDefenseSystem()
        end
    end
})

Tab2:Toggle({
    Title = "ÊúùÂêëËá™ÁûÑ",
    Default = false,
    Callback = function(state)
        faceOn = state
        if state then
            beginFaceSystem()
        else
            endFaceSystem()
        end
    end
})

Tab2:Toggle({
    Title = "Ëá™Âä®ÊîªÂáª",
    Default = false,
    Callback = function(state)
        attackOn = state
        if state then
            beginAttackSystem()
        else
            endAttackSystem()
        end
    end
})

local Tab3 = Window:Tab({
    Title = "‰º†ÈÄÅ",
    Icon = "drama",
    Locked = false,
})

Tab3:Button({
    Title = "‰º†ÈÄÅÂà∞Â¢ô‰∏ä",
    Icon = "arrow-up",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        
        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local targetPosition = Vector3.new(302.3, 671.1, 384.1)
                humanoidRootPart.CFrame = CFrame.new(targetPosition)
            end
        end
                WindUI:Notify({
                    Title = "‰º†ÈÄÅÊàêÂäü",
                    Content = "Â∑≤‰º†ÈÄÅÂà∞Â¢ô‰∏ä",
                    Duration = 3
                })
    end
})

Tab3:Button({
    Title = "‰º†ÈÄÅÂà∞‰∏≠Èó¥",
    Icon = "arrow-up",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        
        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local targetPosition = Vector3.new(124.2, 440.8, -29.9)
                humanoidRootPart.CFrame = CFrame.new(targetPosition)
            end
        end
                WindUI:Notify({
                    Title = "‰º†ÈÄÅÊàêÂäü",
                    Content = "Â∑≤‰º†ÈÄÅÂà∞‰∏≠Èó¥",
                    Duration = 3
                })
    end
})
