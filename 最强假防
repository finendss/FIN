local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local defenseOn = false
local faceOn = false
local detectDistance = 20
local animId = "10470389827"
local animTrack = nil
local defenseLoop = nil
local faceLoop = nil

--设置个防御动画
local function setupAnim()
    local char = Players.LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") then
        local humanoid = char:FindFirstChild("Humanoid")
        local newAnim = Instance.new("Animation")
        newAnim.AnimationId = "rbxassetid://" .. animId
        animTrack = humanoid:LoadAnimation(newAnim)
        return true
    end
    return false
end

local function startAnim()
    if animTrack and not animTrack.IsPlaying then
        animTrack:Play()
    end
end

local function stopAnim()
    if animTrack and animTrack.IsPlaying then
        animTrack:Stop()
    end
end

-- 视奸周围有没有玩家进入附近
local function playersClose()
    local me = Players.LocalPlayer
    local myChar = me.Character
    if not myChar then return false end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return false end
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= me then
            local char = player.Character
            if char then
                local root = char:FindFirstChild("HumanoidRootPart")
                if root then
                    local dist = (myRoot.Position - root.Position).Magnitude
                    if dist <= detectDistance then
                        return true
                    end
                end
            end
        end
    end
    
    return false
end

--视奸最近玩家
local function getClosestPlayer()
    local me = Players.LocalPlayer
    local myChar = me.Character
    if not myChar then return nil end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return nil end
    
    local closest = nil
    local closestDist = 9999
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= me then
            local char = player.Character
            if char then
                local root = char:FindFirstChild("HumanoidRootPart")
                if root then
                    local dist = (myRoot.Position - root.Position).Magnitude
                    if dist < closestDist and dist <= detectDistance then
                        closestDist = dist
                        closest = player
                    end
                end
            end
        end
    end
    
    return closest
end

--角色自动朝向其他最近玩家
local function turnToPlayer()
    if not faceOn then return end
    
    local myChar = Players.LocalPlayer.Character
    if not myChar then return end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return end
    
    local targetPlayer = getClosestPlayer()
    if not targetPlayer then return end
    
    local targetChar = targetPlayer.Character
    if not targetChar then return end
    
    local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
    if not targetRoot then return end
    
    local dir = (targetRoot.Position - myRoot.Position).Unit
    local lookDir = Vector3.new(dir.X, 0, dir.Z)
    
    if lookDir.Magnitude > 0 then
        myRoot.CFrame = CFrame.new(myRoot.Position, myRoot.Position + lookDir)
    end
end

--自动朝向主循环
local function beginFaceSystem()
    if faceLoop then
        faceLoop:Disconnect()
    end
    
    faceLoop = RunService.Heartbeat:Connect(function()
        if faceOn then
            turnToPlayer()
        end
    end)
end

local function endFaceSystem()
    if faceLoop then
        faceLoop:Disconnect()
        faceLoop = nil
    end
end

local function beginDefenseSystem()
    if defenseLoop then
        defenseLoop:Disconnect()
    end
    
    if not setupAnim() then
        return false
    end
    
    defenseLoop = RunService.Heartbeat:Connect(function()
        if defenseOn and animTrack then
            local nearby = playersClose()
            if nearby then
                startAnim()
            else
                stopAnim()
            end
        end
    end)
    return true
end

local function endDefenseSystem()
    if defenseLoop then
        defenseLoop:Disconnect()
        defenseLoop = nil
    end
    stopAnim()
end

-- 玩家重生后重新使用动画/不是ai哈
Players.LocalPlayer.CharacterAdded:Connect(function(char)
    task.wait(2)
    if defenseOn then
        setupAnim()
    end
end)

local function toggleDefense(state)
    defenseOn = state
    if state then
        return beginDefenseSystem()
    else
        endDefenseSystem()
        return true
    end
end

local function changeDetectDistance(dist)
    detectDistance = dist
    return true
end

local function toggleFace(state)
    faceOn = state
    if state then
        beginFaceSystem()
        return true
    else
        endFaceSystem()
        return true
    end
end
