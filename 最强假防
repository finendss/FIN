local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/finendss/FIN-Ui/refs/heads/main/FIN-WindUi"))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local defenseOn = false
local faceOn = false
local defenseDistance = 40 -- 防御检测距离固定为40米
local faceDistance = 5000 -- 自动朝向距离固定为5000米
local animId = "10470389827"
local animTrack = nil
local defenseLoop = nil
local faceLoop = nil

-- 设置防御动画，重生后需要重新加载
local function setupAnim()
    local char = Players.LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") then
        local humanoid = char:FindFirstChild("Humanoid")
        local newAnim = Instance.new("Animation")
        newAnim.AnimationId = "rbxassetid://" .. animId
        animTrack = humanoid:LoadAnimation(newAnim)
        return true
    end
    return false
end

local function startAnim()
    if animTrack and not animTrack.IsPlaying then
        animTrack:Play()
    end
end

local function stopAnim()
    if animTrack and animTrack.IsPlaying then
        animTrack:Stop()
    end
end

-- 检查周围有没有其他玩家进入防御范围
local function playersClose()
    local me = Players.LocalPlayer
    local myChar = me.Character
    if not myChar then return false end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return false end
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= me then
            local char = player.Character
            if char then
                local root = char:FindFirstChild("HumanoidRootPart")
                if root then
                    local dist = (myRoot.Position - root.Position).Magnitude
                    if dist <= defenseDistance then
                        return true
                    end
                end
            end
        end
    end
    
    return false
end

-- 找到距离最近的玩家，用于自动朝向
local function getClosestPlayer()
    local me = Players.LocalPlayer
    local myChar = me.Character
    if not myChar then return nil end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return nil end
    
    local closest = nil
    local closestDist = 9999
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= me then
            local char = player.Character
            if char then
                local root = char:FindFirstChild("HumanoidRootPart")
                if root then
                    local dist = (myRoot.Position - root.Position).Magnitude
                    if dist < closestDist and dist <= faceDistance then
                        closestDist = dist
                        closest = player
                    end
                end
            end
        end
    end
    
    return closest
end

-- 核心功能：让角色自动面向最近的玩家
local function turnToPlayer()
    if not faceOn then return end
    
    local myChar = Players.LocalPlayer.Character
    if not myChar then return end
    
    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return end
    
    local targetPlayer = getClosestPlayer()
    if not targetPlayer then return end
    
    local targetChar = targetPlayer.Character
    if not targetChar then return end
    
    local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
    if not targetRoot then return end
    
    local dir = (targetRoot.Position - myRoot.Position).Unit
    local lookDir = Vector3.new(dir.X, 0, dir.Z)
    
    if lookDir.Magnitude > 0 then
        myRoot.CFrame = CFrame.new(myRoot.Position, myRoot.Position + lookDir)
    end
end

-- 开启自动朝向的主循环
local function beginFaceSystem()
    if faceLoop then
        faceLoop:Disconnect()
    end
    
    faceLoop = RunService.Heartbeat:Connect(function()
        if faceOn then
            turnToPlayer()
        end
    end)
end

local function endFaceSystem()
    if faceLoop then
        faceLoop:Disconnect()
        faceLoop = nil
    end
end

local function beginDefenseSystem()
    if defenseLoop then
        defenseLoop:Disconnect()
    end
    
    if not setupAnim() then
        return false
    end
    
    defenseLoop = RunService.Heartbeat:Connect(function()
        if defenseOn and animTrack then
            local nearby = playersClose()
            if nearby then
                startAnim()
            else
                stopAnim()
            end
        end
    end)
    return true
end

local function endDefenseSystem()
    if defenseLoop then
        defenseLoop:Disconnect()
        defenseLoop = nil
    end
    stopAnim()
end

-- 角色重生后重新绑定动画
Players.LocalPlayer.CharacterAdded:Connect(function(char)
    task.wait(2)
    if defenseOn then
        setupAnim()
    end
end)

local function toggleDefense(state)
    defenseOn = state
    if state then
        return beginDefenseSystem()
    else
        endDefenseSystem()
        return true
    end
end

local function toggleFace(state)
    faceOn = state
    if state then
        beginFaceSystem()
        return true
    else
        endFaceSystem()
        return true
    end
end

-- WindUI界面
WindUI:Popup({
    Title = "防御系统",
    Icon = "shield",
    Content = "自动防御和朝向系统已加载",
    Buttons = {
        {
            Title = "确定",
            Icon = "check",
            Variant = "Primary",
            Callback = function()
                print("防御系统UI已启动")
            end
        }
    }
})

local Window = WindUI:CreateWindow({
    Title = "防御系统",
    Icon = "shield",
    Author = "防御模块",
    Folder = "DefenseSystem",
    Size = UDim2.fromOffset(400, 400),
    Theme = "Dark"
})

local CombatTab = Window:Tab({
    Title = "战斗功能",
    Icon = "swords",
    Locked = false,
})

CombatTab:Toggle({
    Title = "自动防御系统",
    Default = false,
    Callback = function(state)
        if toggleDefense(state) then
            WindUI:Notify({
                Title = "防御系统",
                Content = state and "自动防御已启动" or "自动防御已关闭",
                Duration = 2
            })
        else
            WindUI:Notify({
                Title = "错误",
                Content = "无法加载防御动画",
                Duration = 3
            })
        end
    end
})

CombatTab:Toggle({
    Title = "自动朝向玩家",
    Default = false,
    Callback = function(state)
        if toggleFace(state) then
            WindUI:Notify({
                Title = "朝向系统",
                Content = state and "自动朝向已启动" or "自动朝向已关闭",
                Duration = 2
            })
        end
    end
})

CombatTab:Paragraph({
    Title = "系统说明",
    Desc = "防御系统：40米内有玩家时自动播放防御动画\n朝向系统：5000米内自动面向最近玩家",
    Color = "Blue"
})

local SettingsTab = Window:Tab({
    Title = "设置",
    Icon = "settings",
    Locked = false,
})

SettingsTab:Button({
    Title = "重新加载动画",
    Default = false,
    Callback = function()
        if setupAnim() then
            WindUI:Notify({
                Title = "动画加载",
                Content = "防御动画重新加载成功",
                Duration = 2
            })
        else
            WindUI:Notify({
                Title = "错误",
                Content = "无法加载防御动画",
                Duration = 2
            })
        end
    end
})

SettingsTab:Paragraph({
    Title = "提示",
    Desc = "如果动画不播放，可以尝试点击重新加载动画按钮",
    Color = "Yellow"
})
